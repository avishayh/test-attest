name: Docker Hello World

on:
  push:
    branches:
      - main  # Change this to the branch you want to monitor

jobs:
  hello-docker:
    runs-on: ubuntu-latest
    permissions:
      actions: read             # using $GITHUB_OUTPUT
      id-token: write           # Necessary to create attestations
      attestations: write       # Necessary to push attestations to GH account
    env:
      DOCKER_REPO: 'evidence-demo-docker-dev'
      IMAGE_NAME: 'github-hello-world'
      JF_USERNAME: 'avishayh'
      JF_URL: ${{ vars.JF_URL }}            # e.g: https://evidencetrial.jfrog.io/
      JF_REGISTRY: ${{ vars.JF_REGISTRY }}  # e.g: evidencetrial.jfrog.io
      JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      JF_PROJECT: "default"
#      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
    - name: Authenticate Docker
      uses: docker/login-action@v3.4
      with:
          registry: ${{ env.JF_URL }}
          username: ${{ env.JF_USERNAME }}
          password: ${{ env.JF_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3.10.0
      with:
        use: true
        platforms: linux/amd64,linux/arm64
        install: true
    - name: Docker Build and Push
      id: docker
      run: |
#       docker buildx ls
#       jf docker --version
       jf docker build \
        --tag ${{ env.JF_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ github.run_number }} \
#        --platform linux/amd64,linux/arm64 \
        --metadata-file metadata.json \
        --push .
        
       #capture digest to step output
       digest=$(cat metadata.json | jq '.["containerimage.digest"]')
       echo "docker_digest=$digest"
       echo "docker_digest=$digest" | tr -d '"' >> $GITHUB_OUTPUT

    - name: Generate docker attestation
      id: attest
      uses: actions/attest-build-provenance@v2.2.3
      with:
        subject-name: ${{ env.JF_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.docker.outputs.docker_digest }}
        push-to-registry: true
      



